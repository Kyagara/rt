name: "build"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libasound2-dev libappindicator3-dev librsvg2-dev patchelf nsis lld llvm ninja-build nasm

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version: lts/*

      - name: Install npm dependencies
        run: npm ci

      - name: Run frontend lint
        run: npm run lint && npm run check

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache cargo-xwin dependencies
        uses: actions/cache@v4
        with:
          path: ~/.xwin
          key: xwin-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            xwin-

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install cargo-xwin
        run: cargo install --locked cargo-xwin

      - name: Run clippy
        working-directory: src-tauri
        run: cargo clippy

      - name: Build for Linux
        run: npm run tauri build

      - name: Build for Windows
        run: npm run tauri build -- --runner cargo-xwin --target x86_64-pc-windows-msvc

      - name: Create bundles folder and move artifacts
        run: |
          mkdir -p bundles
          mv src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe bundles
          mv src-tauri/target/release/bundle/rpm/*.rpm bundles
          mv src-tauri/target/release/bundle/deb/*.deb bundles

      - uses: actions/upload-artifact@v4
        with:
          name: bundles
          path: bundles
